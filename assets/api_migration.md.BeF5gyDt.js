import{_ as t,c as e,o as i,ag as r}from"./chunks/framework.BfYphy29.js";const p=JSON.parse('{"title":"Migration","description":"","frontmatter":{"title":"Migration"},"headers":[],"relativePath":"api/migration.md","filePath":"api/migration.md"}'),o={name:"api/migration.md"};function n(s,a,m,c,d,g){return i(),e("div",null,a[0]||(a[0]=[r('<h1 id="migration" tabindex="-1">Migration <a class="header-anchor" href="#migration" aria-label="Permalink to &quot;Migration&quot;">​</a></h1><h2 id="migration-1" tabindex="-1">Migration <a class="header-anchor" href="#migration-1" aria-label="Permalink to &quot;Migration&quot;">​</a></h2><p>Abstract base class for database migrations. Provides structure for creating reversible database schema changes. Each migration should implement both `up()` and `down()` methods to support forward and backward migration operations.</p><h2 id="getname" tabindex="-1">getName <a class="header-anchor" href="#getname" aria-label="Permalink to &quot;getName&quot;">​</a></h2><p>Gets the migration class name. Used for tracking which migrations have been executed.</p><p><code>returns</code> — The class name of the migration</p><h2 id="gettimestamp" tabindex="-1">getTimestamp <a class="header-anchor" href="#gettimestamp" aria-label="Permalink to &quot;getTimestamp&quot;">​</a></h2><p>Extracts timestamp from migration class name or generates current timestamp. Migration class names should follow the format: YYYY_MM_DD_HHMMSS_MigrationName If no timestamp is found in the class name, returns current timestamp.</p><p><code>returns</code> — Timestamp string in format YYYYMMDDHHMMSS</p>',9)]))}const h=t(o,[["render",n]]);export{p as __pageData,h as default};
