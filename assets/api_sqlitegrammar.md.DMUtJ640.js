import{_ as t,c as a,o as r,ag as o}from"./chunks/framework.BfYphy29.js";const p=JSON.parse('{"title":"SQLiteGrammar","description":"","frontmatter":{"title":"SQLiteGrammar"},"headers":[],"relativePath":"api/sqlitegrammar.md","filePath":"api/sqlitegrammar.md"}'),i={name:"api/sqlitegrammar.md"};function d(l,e,n,s,h,m){return r(),a("div",null,e[0]||(e[0]=[o(`<h1 id="sqlitegrammar" tabindex="-1">SQLiteGrammar <a class="header-anchor" href="#sqlitegrammar" aria-label="Permalink to &quot;SQLiteGrammar&quot;">​</a></h1><p>SQLite-specific query grammar implementation. Compiles query components into SQL statements for SQLite. Supports features like CTEs, UPSERT, and schema introspection via PRAGMA.</p><h2 id="compileselect" tabindex="-1">compileSelect <a class="header-anchor" href="#compileselect" aria-label="Permalink to &quot;compileSelect&quot;">​</a></h2><p>Compiles a SELECT query into SQL.</p><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>query</code></td><td>Query components including ctes, columns, from, joins,</td></tr></tbody></table><pre><code>           wheres, groups, havings, orders, limit, offset. |
</code></pre><p><code>returns</code> — The compiled SQL SELECT statement.</p><h2 id="compileinsert" tabindex="-1">compileInsert <a class="header-anchor" href="#compileinsert" aria-label="Permalink to &quot;compileInsert&quot;">​</a></h2><p>Compiles an INSERT query into SQL, supporting UPSERT (ON CONFLICT).</p><h3 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>query</code></td><td>Contains table, values, and optional onConflict clause.</td></tr></tbody></table><p><code>returns</code> — The compiled SQL INSERT statement.</p><h2 id="compileupdate" tabindex="-1">compileUpdate <a class="header-anchor" href="#compileupdate" aria-label="Permalink to &quot;compileUpdate&quot;">​</a></h2><p>Compiles an UPDATE query into SQL.</p><h3 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>query</code></td><td>Contains table, values, and wheres clauses.</td></tr></tbody></table><p><code>returns</code> — The compiled SQL UPDATE statement.</p><h2 id="compiledelete" tabindex="-1">compileDelete <a class="header-anchor" href="#compiledelete" aria-label="Permalink to &quot;compileDelete&quot;">​</a></h2><p>Compiles a DELETE query into SQL.</p><h3 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>query</code></td><td>Contains table and wheres clauses.</td></tr></tbody></table><p><code>returns</code> — The compiled SQL DELETE statement.</p><h2 id="compilewheres" tabindex="-1">compileWheres <a class="header-anchor" href="#compilewheres" aria-label="Permalink to &quot;compileWheres&quot;">​</a></h2><p>Compiles WHERE clauses into SQL. Supports basic, IN, NOT IN, BETWEEN, NULL checks, EXISTS, and raw.</p><h3 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>wheres</code></td><td>Array of where clause objects.</td></tr></tbody></table><p><code>returns</code> — Compiled WHERE clause string.</p><h2 id="compilejoins" tabindex="-1">compileJoins <a class="header-anchor" href="#compilejoins" aria-label="Permalink to &quot;compileJoins&quot;">​</a></h2><p>Compiles JOIN clauses into SQL.</p><h3 id="parameters-5" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-5" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>joins</code></td><td>Array of join clause objects.</td></tr></tbody></table><p><code>returns</code> — Compiled JOIN clause string.</p><h2 id="compilectes" tabindex="-1">compileCtes <a class="header-anchor" href="#compilectes" aria-label="Permalink to &quot;compileCtes&quot;">​</a></h2><p>Compiles CTEs into SQL.</p><h3 id="parameters-6" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-6" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>ctes</code></td><td>Array of CTE definition objects.</td></tr></tbody></table><p><code>returns</code> — Compiled CTE list string.</p><h2 id="wraptable" tabindex="-1">wrapTable <a class="header-anchor" href="#wraptable" aria-label="Permalink to &quot;wrapTable&quot;">​</a></h2><p>Wraps a table name with double quotes.</p><h3 id="parameters-7" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-7" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>table</code></td><td>Table name.</td></tr></tbody></table><p><code>returns</code> — Wrapped table name.</p><h2 id="wrapcolumn" tabindex="-1">wrapColumn <a class="header-anchor" href="#wrapcolumn" aria-label="Permalink to &quot;wrapColumn&quot;">​</a></h2><p>Wraps a column name with double quotes.</p><h3 id="parameters-8" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-8" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>column</code></td><td>Column name.</td></tr></tbody></table><p><code>returns</code> — Wrapped column name.</p><h2 id="parameter" tabindex="-1">parameter <a class="header-anchor" href="#parameter" aria-label="Permalink to &quot;parameter&quot;">​</a></h2><p>Returns parameter placeholder.</p><h3 id="parameters-9" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-9" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>_</code></td><td>Parameter value (ignored).</td></tr></tbody></table><p><code>returns</code> — Placeholder string &#39;?&#39;.</p><h2 id="getcolumntype" tabindex="-1">getColumnType <a class="header-anchor" href="#getcolumntype" aria-label="Permalink to &quot;getColumnType&quot;">​</a></h2><p>Maps a ColumnDefinition to its SQLite column type.</p><h3 id="parameters-10" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-10" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>column</code></td><td>Column definition object.</td></tr></tbody></table><p><code>returns</code> — SQL column type string.</p><h2 id="formatdefault" tabindex="-1">formatDefault <a class="header-anchor" href="#formatdefault" aria-label="Permalink to &quot;formatDefault&quot;">​</a></h2><p>Formats default values for SQL.</p><h3 id="parameters-11" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-11" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>def</code></td><td>Default value.</td></tr></tbody></table><p><code>returns</code> — Formatted default clause.</p><h2 id="compilecolumndefinition" tabindex="-1">compileColumnDefinition <a class="header-anchor" href="#compilecolumndefinition" aria-label="Permalink to &quot;compileColumnDefinition&quot;">​</a></h2><p>Compiles a single column definition for CREATE TABLE.</p><h3 id="parameters-12" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-12" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>column</code></td><td>ColumnDefinition object.</td></tr></tbody></table><p><code>returns</code> — Compiled column definition string.</p><h2 id="compilecreatetable" tabindex="-1">compileCreateTable <a class="header-anchor" href="#compilecreatetable" aria-label="Permalink to &quot;compileCreateTable&quot;">​</a></h2><p>Compiles a CREATE TABLE statement for SQLite.</p><h3 id="parameters-13" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-13" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>definition</code></td><td>Table definition with name and columns.</td></tr></tbody></table><p><code>returns</code> — SQL CREATE TABLE string.</p><h2 id="compilealtertable" tabindex="-1">compileAlterTable <a class="header-anchor" href="#compilealtertable" aria-label="Permalink to &quot;compileAlterTable&quot;">​</a></h2><p>Compiles an ALTER TABLE statement for SQLite. Supports only ADD COLUMN.</p><h3 id="parameters-14" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-14" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>definition</code></td><td>TableDefinition with new columns.</td></tr></tbody></table><p><code>returns</code> — SQL ALTER TABLE string.</p><h2 id="compiletableexists" tabindex="-1">compileTableExists <a class="header-anchor" href="#compiletableexists" aria-label="Permalink to &quot;compileTableExists&quot;">​</a></h2><p>Compiles a query to check table existence via PRAGMA.</p><h3 id="parameters-15" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-15" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>table</code></td><td>Table name to check.</td></tr></tbody></table><p><code>returns</code> — SQL PRAGMA table_info statement.</p><h2 id="compilecolumnexists" tabindex="-1">compileColumnExists <a class="header-anchor" href="#compilecolumnexists" aria-label="Permalink to &quot;compileColumnExists&quot;">​</a></h2><p>Compiles a query to check column existence via PRAGMA.</p><h3 id="parameters-16" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-16" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>table</code></td><td>Table name.</td></tr><tr><td><code>column</code></td><td>Column name to check.</td></tr></tbody></table><p><code>returns</code> — SQL PRAGMA table_info statement (filter in driver).</p><h2 id="rename" tabindex="-1">rename <a class="header-anchor" href="#rename" aria-label="Permalink to &quot;rename&quot;">​</a></h2><p>Compiles a RENAME TABLE operation for SQLite.</p><h3 id="parameters-17" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-17" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>from</code></td><td>Current table name.</td></tr><tr><td><code>to</code></td><td>New table name.</td></tr></tbody></table>`,92)]))}const b=t(i,[["render",d]]);export{p as __pageData,b as default};
