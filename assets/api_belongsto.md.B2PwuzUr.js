import{_ as s,c as a,o as t,ag as i}from"./chunks/framework.BfYphy29.js";const c=JSON.parse('{"title":"BelongsTo","description":"","frontmatter":{"title":"BelongsTo"},"headers":[],"relativePath":"api/belongsto.md","filePath":"api/belongsto.md"}'),n={name:"api/belongsto.md"};function l(r,e,o,h,p,d){return t(),a("div",null,e[0]||(e[0]=[i(`<h1 id="belongsto" tabindex="-1">BelongsTo <a class="header-anchor" href="#belongsto" aria-label="Permalink to &quot;BelongsTo&quot;">​</a></h1><h2 id="belongsto-1" tabindex="-1">BelongsTo <a class="header-anchor" href="#belongsto-1" aria-label="Permalink to &quot;BelongsTo&quot;">​</a></h2><p>Represents an inverse one-to-one or one-to-many relationship. The foreign key is stored on the parent model&#39;s table, pointing to the related model. This is the &quot;inverse&quot; side of HasOne and HasMany relationships.</p><h2 id="addconstraints" tabindex="-1">addConstraints <a class="header-anchor" href="#addconstraints" aria-label="Permalink to &quot;addConstraints&quot;">​</a></h2><p>Adds constraints to the relationship query. Filters the related model by its local key matching the parent&#39;s foreign key value.</p><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>query</code></td><td>Query builder to add constraints to</td></tr></tbody></table><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// For Post belongsTo User relationship</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Adds: WHERE users.id = ? (where ? is post.user_id)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><code>returns</code> — Modified query builder with relationship constraints</p><h2 id="getresults" tabindex="-1">getResults <a class="header-anchor" href="#getresults" aria-label="Permalink to &quot;getResults&quot;">​</a></h2><p>Gets the relationship results. Returns a single related model instance or null if none exists.</p><p><code>returns</code> — Promise resolving to related model or null</p><h2 id="associate" tabindex="-1">associate <a class="header-anchor" href="#associate" aria-label="Permalink to &quot;associate&quot;">​</a></h2><p>Associates the parent model with a related model. Sets the foreign key on the parent to point to the related model. Does not save the parent model - you must call save() separately.</p><h3 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>model</code></td><td>Related model to associate with</td></tr></tbody></table><h3 id="example-1" tabindex="-1">Example <a class="header-anchor" href="#example-1" aria-label="Permalink to &quot;Example&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> post</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Post.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">find</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> user</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> User.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">find</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">post.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">userRelation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">associate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(user);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> post.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">save</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Don&#39;t forget to save!</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(post.user_id); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Will be set to user.id</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><code>returns</code> — The parent model for method chaining</p><h2 id="dissociate" tabindex="-1">dissociate <a class="header-anchor" href="#dissociate" aria-label="Permalink to &quot;dissociate&quot;">​</a></h2><p>Dissociates the parent model from its related model. Sets the foreign key on the parent to null. Does not save the parent model - you must call save() separately.</p><p><code>returns</code> — The parent model for method chaining</p><h2 id="getparentkey" tabindex="-1">getParentKey <a class="header-anchor" href="#getparentkey" aria-label="Permalink to &quot;getParentKey&quot;">​</a></h2><p>Gets the foreign key value from the parent model. Overridden for BelongsTo since the foreign key is on the parent.</p><p><code>returns</code> — The foreign key value from the parent model</p>`,26)]))}const u=s(n,[["render",l]]);export{c as __pageData,u as default};
