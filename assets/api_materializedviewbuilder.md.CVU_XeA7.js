import{_ as i,c as e,o as s,ag as t}from"./chunks/framework.BfYphy29.js";const c=JSON.parse('{"title":"MaterializedViewBuilder","description":"","frontmatter":{"title":"MaterializedViewBuilder"},"headers":[],"relativePath":"api/materializedviewbuilder.md","filePath":"api/materializedviewbuilder.md"}'),r={name:"api/materializedviewbuilder.md"};function n(l,a,h,d,p,o){return s(),e("div",null,a[0]||(a[0]=[t(`<h1 id="materializedviewbuilder" tabindex="-1">MaterializedViewBuilder <a class="header-anchor" href="#materializedviewbuilder" aria-label="Permalink to &quot;MaterializedViewBuilder&quot;">​</a></h1><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>viewName</code></td><td>Name of the materialized view to create.</td></tr><tr><td><code>baseTable</code></td><td>Base table from which to select data.</td></tr></tbody></table><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> mv</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MaterializedViewBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;user_by_email&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;users&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ifNotExists</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;email&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;email IS NOT NULL&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">partitionKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;email&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">clusteringKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">clusteringOrder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;DESC&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sql</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mv.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toSQL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sql)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="materializedviewbuilder-1" tabindex="-1">MaterializedViewBuilder <a class="header-anchor" href="#materializedviewbuilder-1" aria-label="Permalink to &quot;MaterializedViewBuilder&quot;">​</a></h2><p>Fluent builder for creating ScyllaDB/Cassandra materialized views. Chain methods to configure view definition and generate the CREATE statement.</p><h2 id="select" tabindex="-1">select <a class="header-anchor" href="#select" aria-label="Permalink to &quot;select&quot;">​</a></h2><p>Specify columns to include in the view.</p><h3 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>columns</code></td><td>Column names to select.</td></tr></tbody></table><h2 id="where" tabindex="-1">where <a class="header-anchor" href="#where" aria-label="Permalink to &quot;where&quot;">​</a></h2><p>Add a WHERE clause condition.</p><h3 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>condition</code></td><td>Raw CQL condition string.</td></tr></tbody></table><h2 id="partitionkey" tabindex="-1">partitionKey <a class="header-anchor" href="#partitionkey" aria-label="Permalink to &quot;partitionKey&quot;">​</a></h2><p>Define partition key columns (must include at least one).</p><h3 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>columns</code></td><td>Column names for the partition key.</td></tr></tbody></table><h2 id="clusteringkey" tabindex="-1">clusteringKey <a class="header-anchor" href="#clusteringkey" aria-label="Permalink to &quot;clusteringKey&quot;">​</a></h2><p>Define clustering key columns.</p><h3 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>columns</code></td><td>Column names for clustering.</td></tr></tbody></table><h2 id="clusteringorder" tabindex="-1">clusteringOrder <a class="header-anchor" href="#clusteringorder" aria-label="Permalink to &quot;clusteringOrder&quot;">​</a></h2><p>Specify clustering order for a column.</p><h3 id="parameters-5" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-5" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>column</code></td><td>Column name to order by.</td></tr><tr><td><code>direction</code></td><td>&#39;ASC&#39; or &#39;DESC&#39;.</td></tr></tbody></table><h2 id="ifnotexists" tabindex="-1">ifNotExists <a class="header-anchor" href="#ifnotexists" aria-label="Permalink to &quot;ifNotExists&quot;">​</a></h2><p>Add IF NOT EXISTS clause to avoid errors if view already exists.</p><h2 id="tosql" tabindex="-1">toSQL <a class="header-anchor" href="#tosql" aria-label="Permalink to &quot;toSQL&quot;">​</a></h2><p>Compile and return the CREATE MATERIALIZED VIEW CQL statement.</p>`,31)]))}const E=i(r,[["render",n]]);export{c as __pageData,E as default};
