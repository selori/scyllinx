import{_ as e,c as s,o as n,ag as t}from"./chunks/framework.S-Qvb3wi.js";const b=JSON.parse('{"title":"SQLiteDriver","description":"","frontmatter":{"title":"SQLiteDriver"},"headers":[],"relativePath":"api/sqlitedriver.md","filePath":"api/sqlitedriver.md"}'),r={name:"api/sqlitedriver.md"};function p(i,a,l,c,d,o){return n(),s("div",null,a[0]||(a[0]=[t(`<h1 id="sqlitedriver" tabindex="-1">SQLiteDriver <a class="header-anchor" href="#sqlitedriver" aria-label="Permalink to &quot;SQLiteDriver&quot;">​</a></h1><p>Creates a new PostgreSQLDriver instance.</p><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>config</code></td><td>Database configuration object</td></tr></tbody></table><h2 id="sqlitedriver-1" tabindex="-1">SQLiteDriver <a class="header-anchor" href="#sqlitedriver-1" aria-label="Permalink to &quot;SQLiteDriver&quot;">​</a></h2><p>SQLite driver implementation using better-sqlite3.</p><h2 id="connect" tabindex="-1">connect <a class="header-anchor" href="#connect" aria-label="Permalink to &quot;connect&quot;">​</a></h2><p>Connect to a SQLite database using the given configuration.</p><p><code>returns</code> — Promise that resolves when connection is established</p><h2 id="disconnect" tabindex="-1">disconnect <a class="header-anchor" href="#disconnect" aria-label="Permalink to &quot;disconnect&quot;">​</a></h2><p>Disconnects from the SQLite database.</p><h2 id="query" tabindex="-1">query <a class="header-anchor" href="#query" aria-label="Permalink to &quot;query&quot;">​</a></h2><p>Execute a raw SQL query with optional bindings and options.</p><h3 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>sql</code></td><td>The raw SQL string to execute.</td></tr><tr><td><code>bindings</code></td><td>The parameter bindings for the SQL query.</td></tr></tbody></table><p><code>returns</code> — The result of the executed query.</p><h2 id="prepare" tabindex="-1">prepare <a class="header-anchor" href="#prepare" aria-label="Permalink to &quot;prepare&quot;">​</a></h2><p>Prepares a SQL statement and returns a PreparedStatement wrapper.</p><h3 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>sql</code></td><td>The SQL statement to prepare.</td></tr></tbody></table><p><code>returns</code> — A prepared statement interface for reuse.</p><h2 id="getlastinsertid" tabindex="-1">getLastInsertId <a class="header-anchor" href="#getlastinsertid" aria-label="Permalink to &quot;getLastInsertId&quot;">​</a></h2><p>Get the last inserted row ID.</p><p><code>returns</code> — The ID of the last inserted row.</p><h2 id="escape" tabindex="-1">escape <a class="header-anchor" href="#escape" aria-label="Permalink to &quot;escape&quot;">​</a></h2><p>Escape an identifier (e.g. table or column name) for SQLite.</p><h3 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>value</code></td><td>The identifier to escape.</td></tr></tbody></table><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`\`\`ts</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">driver.escape(&quot;users&quot;) // =&gt; &quot;\`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">users</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>  \`returns\` — The escaped identifier.</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>## getGrammar</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>Returns the SQLite grammar instance.</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>## supportsFeature</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>Checks whether a given feature is supported by the SQLite driver.</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>### Parameters</span></span>
<span class="line"><span></span></span>
<span class="line"><span>| Name | Description |</span></span>
<span class="line"><span>|------|-------------|</span></span>
<span class="line"><span>| \`feature\` | The name of the feature to check. |</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>  \`returns\` — Whether the feature is supported.</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div>`,31)]))}const u=e(r,[["render",p]]);export{b as __pageData,u as default};
