import{_ as a,c as t,o as s,ag as r}from"./chunks/framework.S-Qvb3wi.js";const k=JSON.parse('{"title":"Seeder","description":"","frontmatter":{"title":"Seeder"},"headers":[],"relativePath":"api/seeder.md","filePath":"api/seeder.md"}'),i={name:"api/seeder.md"};function n(l,e,h,d,o,p){return s(),t("div",null,e[0]||(e[0]=[r(`<h1 id="seeder" tabindex="-1">Seeder <a class="header-anchor" href="#seeder" aria-label="Permalink to &quot;Seeder&quot;">​</a></h1><h2 id="seederrunner" tabindex="-1">SeederRunner <a class="header-anchor" href="#seederrunner" aria-label="Permalink to &quot;SeederRunner&quot;">​</a></h2><h2 id="seeder-1" tabindex="-1">Seeder <a class="header-anchor" href="#seeder-1" aria-label="Permalink to &quot;Seeder&quot;">​</a></h2><p>Base class for database seeders. Extend this class and implement the \`run()\` method to insert or manipulate data.</p><h2 id="seederrunner-1" tabindex="-1">SeederRunner <a class="header-anchor" href="#seederrunner-1" aria-label="Permalink to &quot;SeederRunner&quot;">​</a></h2><p>Manages and runs registered seeders.</p><h2 id="connection" tabindex="-1">connection <a class="header-anchor" href="#connection" aria-label="Permalink to &quot;connection&quot;">​</a></h2><p>Underlying database connection</p><h2 id="call" tabindex="-1">call <a class="header-anchor" href="#call" aria-label="Permalink to &quot;call&quot;">​</a></h2><p>Invoke another seeder from within this seeder.</p><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>SeederClass</code></td><td>The seeder class to call.</td></tr></tbody></table><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Within a seeder:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">call</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(OtherSeeder)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="factory" tabindex="-1">factory <a class="header-anchor" href="#factory" aria-label="Permalink to &quot;factory&quot;">​</a></h2><p>Access a model factory for generating test data.</p><h3 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>factory</code></td><td>A function returning the factory instance</td></tr></tbody></table><h3 id="example-1" tabindex="-1">Example <a class="header-anchor" href="#example-1" aria-label="Permalink to &quot;Example&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Get the Post factory:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> postFactory</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">factory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Post.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">factory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> posts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> postFactory.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">makeMany</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><code>returns</code> — The factory instance</p><h2 id="truncate" tabindex="-1">truncate <a class="header-anchor" href="#truncate" aria-label="Permalink to &quot;truncate&quot;">​</a></h2><p>Truncate (empty) the given table.</p><h3 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>tableName</code></td><td>Name of the table to truncate.</td></tr></tbody></table><h3 id="example-2" tabindex="-1">Example <a class="header-anchor" href="#example-2" aria-label="Permalink to &quot;Example&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Clear the comments table:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">truncate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;comments&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><code>returns</code> — Promise that resolves when truncation is complete.</p><h2 id="seeders" tabindex="-1">seeders <a class="header-anchor" href="#seeders" aria-label="Permalink to &quot;seeders&quot;">​</a></h2><p>Internal list of registered seeder classes</p><h2 id="register" tabindex="-1">register <a class="header-anchor" href="#register" aria-label="Permalink to &quot;register&quot;">​</a></h2><p>Register a seeder class to be run later.</p><h3 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>seederClass</code></td><td>Seeder class constructor.</td></tr></tbody></table><h2 id="run" tabindex="-1">run <a class="header-anchor" href="#run" aria-label="Permalink to &quot;run&quot;">​</a></h2><p>Run all registered seeders, or a provided list.</p><h3 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>seeders</code></td><td>Optional array of seeder classes to run instead of all registered.</td></tr></tbody></table><p><code>returns</code> — Promise that resolves when all runs complete.</p><h2 id="runone" tabindex="-1">runOne <a class="header-anchor" href="#runone" aria-label="Permalink to &quot;runOne&quot;">​</a></h2><p>Run a single seeder class.</p><h3 id="parameters-5" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-5" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>seederClass</code></td><td>The seeder class to execute.</td></tr></tbody></table><p><code>returns</code> — Promise that resolves when the run completes.</p>`,44)]))}const u=a(i,[["render",n]]);export{k as __pageData,u as default};
